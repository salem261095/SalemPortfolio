---
import { getTestimonials } from "@/graphql/fetcher/fetchTestimonials";
import { ArrowLeft, ArrowRight } from "@lucide/astro";
import SecTitle from "./SecTitle.astro";

const testimonialsData = await getTestimonials();
---

<style>
  .testimonial-slide {
    position: absolute;
    inset: 0;
    opacity: 0;
    transition: opacity 0.6s ease-in-out;
    pointer-events: none;
  }
  .testimonial-slide.active {
    opacity: 1;
    pointer-events: auto;
  }
</style>

<section class="relative w-full max-w-xl mx-auto py-6 text-center" aria-label="شهادات العملاء">
  <SecTitle text="اراء العملاء" />

  <div class="overflow-hidden border rounded-lg p-6 bg-white h-48 relative">
    <div id="testimonial-carousel" class="relative h-full">
      {
        testimonialsData.map((testi, idx) => (
          <div
            class={`testimonial-slide ${idx === 0 ? "active" : ""}`}
            data-index={idx}
          >
            <p set:html={testi.content} />
            <div class="mt-2">
              <p class="font-bold">{testi.Title}</p>
              <p class="text-sm text-gray-500">{testi.testimonialPosition}</p>
            </div>
          </div>
        ))
      }
    </div>
  </div>

  <div class="flex justify-center gap-4 mt-4">
    <button id="prev" class="bg-black text-white p-1 md:p-2 rounded">
      <ArrowRight />
    </button>
    <button id="next" class="bg-black text-white p-1 md:p-2 rounded">
      <ArrowLeft />
    </button>
  </div>

  <script is:inline>
    const slides = document.querySelectorAll(".testimonial-slide");
    let current = 0;

    const updateSlides = () => {
      slides.forEach((slide, i) => {
        slide.classList.toggle("active", i === current);
      });
    };

    document.getElementById("prev").addEventListener("click", () => {
      current = (current - 1 + slides.length) % slides.length;
      updateSlides();
    });

    document.getElementById("next").addEventListener("click", () => {
      current = (current + 1) % slides.length;
      updateSlides();
    });

    setInterval(() => {
      current = (current + 1) % slides.length;
      updateSlides();
    }, 5000);

    updateSlides();
  </script>
</section>
